export component MainWindow inherits Window {
	callback clock_update;
	
	in property <bool> clock_active: false;
	in property <string> time: "";

	// Window
	in property <color> window_color: rgba(0,0,0,0.0);
	in property <color> border_color: rgba(0,0,0,0.0);
	in property <length> border_width: 0px;
	in property <length> border_radius: 0px;
    in property <length> window_width: 0px;
    in property <length> window_height: 0px;

	// Font
	in property <bool> font_italic: false;
	in property <color> font_color: white;
	in property <int> font_weight: 600;
	in property <string> font_family: "";
	in property <float> font_size: 0.8;
	in property <length> font_spacing: 0px;
	// Font stroke
	in property <color> font_stroke_color: #8aadf4ee;
	in property <length> font_stroke_width: 0px;

	// Clock
	in-out property <string> end_sound: "notification.mp3";
	in-out property <string> tick_sound: "";
	in-out property <bool> military: true;
	in-out property <bool> truncate: false;

	
	title: "hyprclock";
    width: window_width;
    height: window_height;
    background: transparent;

	Rectangle {
		width: parent.width;
		height: parent.height;
		clip: true;

		background: window_color;
		border-color: border_color;
		border-width: border_width;
		border-radius: border_radius;

	}
	
	clock := Text {
		text: time;
		
		// General
		color: font_color;
		font-weight: font_weight;
		font-italic: font_italic;
		font-family: font_family;
		font-size: (parent.width*0.85)*(min(1, font_size)*0.25);
		letter-spacing: font_spacing;
		
		// Strokes
		stroke: font_stroke_color;
		stroke-width: min(font_stroke_width, 5px);
		stroke-style: outside;


		animate color {
			duration: 750ms;
			easing: ease-out;
		}

	}

	timer := Timer {
		interval: 1s;
		running: clock_active;
		triggered => {
			parent.clock_update();
		}
	}

}
